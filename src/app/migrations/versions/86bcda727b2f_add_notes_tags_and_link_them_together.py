"""Add notes, tags and link them together.

Revision ID: 86bcda727b2f
Revises: 
Create Date: 2025-09-17 13:35:50.358480

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '86bcda727b2f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('note',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('content', sa.String(length=20000), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('note_pkey'))
    )
    op.create_table('tag',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('tag_pkey')),
    sa.UniqueConstraint('name', 'owner_id', name='unique_name_owner')
    )
    op.create_table('note_tag_m2m',
    sa.Column('note_id', sa.Uuid(), nullable=True),
    sa.Column('tag_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], name=op.f('note_tag_m2m_note_id_fkey')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('note_tag_m2m_tag_id_fkey'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('note_tag_m2m')
    op.drop_table('tag')
    op.drop_table('note')
    # ### end Alembic commands ###
